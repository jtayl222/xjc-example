plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def generated_dir = "src/main/java"
sourceSets {
    generated {
        java.srcDir "$generated_dir"
    }
}

configurations {
    jaxb
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    jaxb  "org.glassfish.jaxb:jaxb-xjc:4.0.2"
    jaxb "org.glassfish.jaxb:jaxb-runtime:4.0.2"

    // The next two dependencies are not necessary for generating code, only when running the code:
    // Generated code depends on the JAXB API, which is removed from base Java in JDK 11, and therefore needs to be added
    implementation "org.glassfish.jaxb:jaxb-runtime:4.0.2"
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0' // In JAXB v3, 'jakarta.xml.bind' was moved to 'jakarta.xml.bind'

}

// Cookie cutter function for defining multiple XJC tasks
def addXjcTask(taskName, schema, pkg, dest) {

    // If you haven't already, create the generated output dir before running XJC or it will fail
    file(dest).mkdirs()


    // The main XJC task, calls XJCFacade which is the entry point of the XJC JAR
    tasks.create(name: taskName, type: JavaExec) {
        classpath configurations.jaxb
        mainClass = 'com.sun.tools.xjc.XJCFacade'

        // To explore available args, download the XJC JAR and run java -jar jaxb-xjc.jar --help
        args schema, "-p", pkg, "-d", dest, "-no-header"
    }
}

// Add all the XJC tasks you need
addXjcTask("maven-xsd",
        "src/main/resources/maven-4.0.0.xsd",
        "${archivesBaseName}.my_maven_package_name",
        "$generated_dir")

tasks.register("generateSources") {
    description "Generate Java sources fram XSD files"
    dependsOn tasks.getByName("maven-xsd")
}

test {
    useJUnitPlatform()
}